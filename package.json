{
  "name": "cli_auto_tools",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "help": "node scripts/print-scripts.cjs",
    "sum:jira": "node scripts/sum_jira.cjs",
    "clear:prompt": "node scripts/clear_prompts.cjs"
  },
  "scriptsMeta": {
    "help": {
      "description": "显示所有可用的 npm 脚本及其说明",
      "env": "both",
      "prodSafe": true,
      "tags": ["docs", "meta"],
      "AI_actions": "1) 阅读输出的“已支持的自动化流程/指令”列表，定位与当前任务最匹配的工具。\n2) 打开所选指令的描述与 AI_actions，确认输入、产物与后续校验方式。\n3) 在本地 Windows 11 + git bash 中执行该指令；若为生产相关，仅通过项目提供的封装脚本触发，避免直接在生产机上运行本地开发脚本。\n4) 按所选指令的 AI_actions 完成后续操作与验证（如检查产物目录、运行最小化校验、生成变更说明等）。\n5) 若当前任务均无适配的自动化流程，则不要强行套用；按原始提示词的手动流程继续执行。\n6) 如需再次查看或切换工具，可重新执行 `npm run help` 并重复上述步骤。"
    },
    "sum:jira": {
      "description": "根据Jira工单号生成知识库文章的总结提示词。",
      "usage": "npm run sum:jira {工单号}",
      "AI_actions": "1) 执行后根据返回信息获取“提示词文件路径”（包含已拼接的工单内容）。在 git bash 中可用 `test -s <路径>` 校验文件存在且非空；若需与 Windows 原生工具交互，可用 `cygpath -w <路径>` 转换为 Windows 路径。\n2) 打开并快速审阅文件内容，确认工单标题、描述、评论等信息已正确拼接；对敏感信息进行必要脱敏与润色。\n3) 如需补充上下文（例如期望产出格式、读者对象、边界条件），请直接编辑该提示词文件并保存，保留原有工单关键信息不丢失。\n4) 在后续步骤中，前往 `npm run help` 选择与当前目标匹配的自动化指令（如总结、评审、生成变更说明等），并在支持的情况下将“提示词文件路径”作为输入参数传入该指令。\n5) 若一次性处理多个工单，请确认文件内容是否按预期顺序与分隔格式拼接；必要时拆分为多个提示词文件分别使用。\n6) 若未生成路径或路径无效，请复核输入参数与权限后重试该指令；持续失败时，记录报错信息并向开发者反馈以便排查。",
      "tags": ["jira", "summary", "prompt"]
    },
    "clear:prompt": {
      "description": "清理超过7天的临时提示词文件。",
      "usage": "npm run clear:prompt",
      "AI_actions": "此指令会删除 prompt/temp 目录下最后修改时间超过7天的 `*_prompt.md` 文件，以防临时文件堆积。完成后，我会告知您清理结果。",
      "tags": ["maintenance", "cleanup"]
    }
  },
  "keywords": [],
  "author": "",
  "license": "ISC"
}
